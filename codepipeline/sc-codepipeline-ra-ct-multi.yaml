Description: ServiceCatalog Portfolio CI/CD Automation Pipeline (fdp-1p4dlgcoo)
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  pipelineartifactsBucketName:
    Type: String
    Description: Bucket name for the codepipeline artifacts container
    Default: servicesatalog-pipelineartifacts
  DeployedTemplatesBucketName:
    Type: String
    Description: Bucket name for the Deployed Templates container
    Default: servicesatalog-deployedtemplates
  CodeCommitRepoName:
    Type: String
    Description: The project name, also the CodeCommit Repository name
    Default: SCPortfoliosRepo
  RandomString:
    Type: String
    Description: Random String to support shared accounts
  ChildAccountAccess:
    Type: CommaDelimitedList
    Description: List of AccountIds to Grant GetObject Access to the Deployed Templates
      Bucket
Conditions:
  CreateBucketPolicy: !Not
    - !Equals
      - !Select
        - '0'
        - !Ref 'ChildAccountAccess'
      - ''
Resources:
  PipelineArtifacts:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub '${pipelineartifactsBucketName}-${AWS::AccountId}-${RandomString}'
  DeployedTemplates:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub '${DeployedTemplatesBucketName}-${AWS::AccountId}-${RandomString}'
  TaskCatTempBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
  ScratchBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
  DeployedTemplatesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: CreateBucketPolicy
    Properties:
      Bucket: !Ref 'DeployedTemplates'
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Split
                - ','
                - !Sub
                  - arn:aws:iam::${acc}:role/AWSControlTowerExecution
                  - acc: !Join
                      - ':role/AWSControlTowerExecution,arn:aws:iam::'
                      - !Ref 'ChildAccountAccess'
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${DeployedTemplates}/*'
  SCPortfoliosRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Repository for Service Catalog Portfolios and products
      RepositoryName: !Ref 'CodeCommitRepoName'
      Triggers: []
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
      Policies:
        - PolicyName: CodeBuildManageS3Artifacts
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:DeleteBucketPolicy
                  - s3:GetBucketPolicy
                  - s3:GetBucketPolicyStatus
                  - s3:PutBucketPolicy
                  - s3:GetBucketLocation
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${PipelineArtifacts}'
                  - !Sub 'arn:aws:s3:::${PipelineArtifacts}/*'
                  - !Sub 'arn:aws:s3:::${DeployedTemplates}'
                  - !Sub 'arn:aws:s3:::${DeployedTemplates}/*'
                  - !Sub 'arn:aws:s3:::taskcat-*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
        - PolicyName: CodeBuildManageCloudformation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:GetTemplate
                  - cloudformation:ListStackSets
                  - cloudformation:ListStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:UpdateStackSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplateSummary
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - s3:GetObject
                Resource: '*'
        - PolicyName: TaskCatEC2ValidationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:AddRoleToInstanceProfile
                  - iam:ListRolePolicies
                  - iam:ListPolicies
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:ListRoles
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - iam:PutGroupPolicy
                  - iam:DeleteGroupPolicy
                  - iam:DetachGroupPolicy
                  - iam:AttachGroupPolicy
                Resource: '*'
        - PolicyName: CodeBuildManageCodeBuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:ListBuilds
                  - codebuild:ListProjects
                  - codebuild:ListBuildsForProject
                  - codebuild:UpdateProject
                  - codebuild:CreateProject
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*'
  CodePipelineServiceCatalogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineManageS3Artifacts
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${PipelineArtifacts}'
                  - !Sub 'arn:aws:s3:::${PipelineArtifacts}/*'
        - PolicyName: codepipeline-codecommit
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource: !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepoName}'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGetProjects
                  - codebuild:BatchGetBuilds
                  - codebuild:ListBuilds
                  - codebuild:ListProjects
                  - codebuild:ListBuildsForProject
                  - codebuild:ListCuratedEnvironmentImages
                  - codebuild:ListSourceCredentials
                Resource:
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${cbproj}
                    - cbproj: !Ref 'CodeBuildDeployS3Project'
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${cbproj}
                    - cbproj: !Ref 'CodeBuildCFNNAG'
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${cbproj}
                    - cbproj: !Ref 'CodeBuildValidateTemplate'
  CodeBuildDeployS3Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Copy templates to S3 then update the portfolio.
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ubuntu-base:14.04
      Source:
        Type: CODEPIPELINE
        BuildSpec: codepipeline/buildspec-multi.yaml
      TimeoutInMinutes: 10
  CodeBuildValidateTemplate:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: run taskcat on template to validate in accounts and regions
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: PROJECTNAME
            Value: !Ref 'CodeCommitRepoName'
            Type: PLAINTEXT
          - Name: ARTIFACT_BUCKET
            Value: !Ref 'PipelineArtifacts'
            Type: PLAINTEXT
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/buildspec-validate.yaml
      TimeoutInMinutes: 10
  CodeBuildCFNNAG:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: run CFN_NAG on templates for linting and security checking
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ruby:2.5.3
      Source:
        Type: CODEPIPELINE
        BuildSpec: codepipeline/buildspec-cnfnag.yaml
      TimeoutInMinutes: 10
  ProductPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref 'PipelineArtifacts'
      RoleArn: !GetAtt 'CodePipelineServiceCatalogRole.Arn'
      Stages:
        - Name: SourceStageCodeCommit
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt 'SCPortfoliosRepo.Name'
                BranchName: master
              OutputArtifacts:
                - Name: SourceArtifacts
        - Name: PreCreateTests
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Lint_Template
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref 'CodeBuildCFNNAG'
              RunOrder: 1
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Validate_Template
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref 'CodeBuildValidateTemplate'
              RunOrder: 2
        - Name: CopyAndDeploy
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: CopyAndDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref 'CodeBuildDeployS3Project'
              OutputArtifacts:
                - Name: DeployOutput
Outputs:
  PipelineArtifactsBucket:
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'PipelineArtifacts.DomainName'
        - /
    Description: S3 bucket url for pipeline artifacts.
  DeployedTemplatesBucket:
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'DeployedTemplates.DomainName'
        - /
    Description: S3 bucket url for deployed templates.
  TaskCatTemplatesBucket:
    Value: !Ref 'TaskCatTempBucket'
    Description: S3 bucket name for temporary taskcat artifacts.
  TaskCatTemplatesBucketURL:
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'TaskCatTempBucket.DomainName'
        - /
        - !Ref 'CodeCommitRepoName'
    Description: S3 bucket url for temporary taskcat artifacts.
  CloneUrlSsh:
    Value: !GetAtt 'SCPortfoliosRepo.CloneUrlSsh'
    Description: URL for ssh cloning the Product Repo
